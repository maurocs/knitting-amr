<?xml version="1.0"?>
<robot name="amr_base" xmlns:xacro="http://www.ros.org/wiki/xacro" >
    <!--************* CONSTANTS **************-->
    <!-- Define the robot's dimensions -->
    <xacro:property name="robot_radius" value="0.23" />
    <xacro:property name="wheel_radius" value="0.0825" />
    <xacro:property name="wheel_width" value="0.0435" />
    <xacro:property name="wheel_base" value="0.365" />
    <xacro:property name="base_height" value="0.255" />
    
    <!-- Define intertia macros  -->
    <xacro:macro name="box_inertia" params="m w h d">
        <inertial>
            <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}" />
            <mass value="${m}" />
            <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}" />
        </inertial>
    </xacro:macro>
    <xacro:macro name="cylinder_inertia" params="m r h">
        <inertial>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
            <mass value="${m}" />
            <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy="0" ixz="0" iyy="${(m/12) * (3*r*r + h*h)}" iyz="0" izz="${(m/2) * (r*r)}" />
        </inertial>
    </xacro:macro>
    <xacro:macro name="sphere_inertia" params="m r">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}" />
        </inertial>
    </xacro:macro>
    <!--************* ROBOT'S FOOTPRINT **************-->
    <link name="base_footprint" />
    <joint name="base_to_base" type="fixed">
        <parent link="base_footprint" />
        <child link="base_link" />
        <origin xyz="0 0 0" rpy="0 0 0" />
    </joint>
    <!--************* ROBOT'S BASE **************-->
    <link name="base_link">
        <visual>
            <geometry>
                <mesh filename="file:///home/mauro/amr_ws/src/amr_desc/meshes/amr_base.dae" />
            </geometry>
            <origin rpy="0 0 ${pi/2}" xyz="0 0 0.033" />
            <material name="metal">
                <color rgba="0.8 0.8 0.8 1" />
            </material>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0.1625" />
            <geometry>
                <cylinder radius="${robot_radius}" length="0.255" />
            </geometry>
        </collision>
        <xacro:cylinder_inertia m="40000.0" r="${robot_radius}" h="0.255" />
    </link>
    <!--************* ROBOT'S WHEELS **************-->
    <xacro:macro name="wheel" params="prefix reflect">
        <link name="${prefix}_link">
            <visual>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
                <geometry>
                    <mesh filename="file:///home/mauro/amr_ws/src/amr_desc/meshes/amr_wheel.dae" />
                </geometry>
                <material name="black">
                    <color rgba="0 0 0 1" />
                </material>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}" />
                </geometry>
            </collision>
        </link>
        <joint name="${prefix}_joint" type="revolute">
            <parent link="base_link" />
            <child link="${prefix}_link" />
            <origin xyz="0 ${reflect*(wheel_base/2)} ${wheel_radius}" rpy="${-reflect * (pi/2)} 0 0" />
            <limit upper="3.1415" lower="-3.1415" effort="30" velocity="5.0" />
            <axis xyz="0 0 ${reflect}" />
        </joint>
    </xacro:macro>
    <xacro:wheel prefix="lwheel" reflect="1" />
    <xacro:wheel prefix="rwheel" reflect="-1" />
    <!--************* ROBOT'S CASTERS **************-->
    <xacro:macro name="caster" params="prefix position">
        <link name="${prefix}_link">
            <visual>
                <geometry>
                    <mesh filename="file:///home/mauro/amr_ws/src/amr_desc/meshes/amr_caster.dae" />
                </geometry>
                <origin rpy="0 0 ${pi/2}" xyz="0 0 0" />
                <material name="white">
                    <color rgba="1 1 1 1" />
                </material>
            </visual>
            <collision>
                <origin xyz="0 0 ${wheel_radius/2}" rpy="0 0 0" />
                <geometry>
                    <sphere radius="${0.108/2}" />
                </geometry>
            </collision>
            <xacro:sphere_inertia m="10.05" r="${0.108/2}" />
        </link>
        <joint name="${prefix}_joint" type="fixed">
            <parent link="base_link" />
            <child link="${prefix}_link" />
            <origin xyz="${position}" rpy="0 0 0" />
        </joint>
    </xacro:macro>
    <xacro:caster prefix="fcaster" position="0.135 0 0" />
    <xacro:caster prefix="lcaster" position="-0.135 0.105 0" />
    <xacro:caster prefix="rcaster" position="-0.135 -0.105 0" />
    <!--************* ROBOT'S LASER **************-->
    <link name="laser">
        <visual>
            <geometry>
                <cylinder radius="0.02" length="0.04" />
            </geometry>
            <origin xyz="0 0 0.0" rpy="0 0 0" />
            <material name="black">
                <color rgba="0 0 0 1" />
            </material>
        </visual>
    </link>
    <joint name="base_to_scanner" type="fixed">
        <parent link="base_link" />
        <child link="laser" />
        <origin xyz="0.165 0 0.24" rpy="0 0 0" />
    </joint>
    <!--************* ROBOT'S CAMERA **************-->
    <link name="camera_link">
        <visual>
            <geometry>
                <mesh filename="file:///home/mauro/amr_ws/src/amr_desc/meshes/d435.dae" />
            </geometry>
            <origin rpy="${pi/2} 0 ${pi/2}" xyz="0 0 0" />
            <material name="black">
                <color rgba="0 0 0 1" />
            </material>
        </visual>
    </link>
    <joint name="base_to_camera" type="fixed">
        <parent link="base_link" />
        <child link="camera_link" />
        <origin rpy="0 0 0" xyz="0.23 0 0.15" />
    </joint>
    <link name="imu_link" />
    <joint name="imu_joint" type="fixed">
        <parent link="camera_link" />
        <child link="imu_link" />
        <origin rpy="0 0 0" xyz="0 0 0" />
    </joint>
</robot>